# Задача 26:  
# Напишите программу, которая на вход принимает два числа A и B, и возводит число А в целую степень B с помощью рекурсии.



def pow(a:float, n:int):
    """
    Данная функция принимает на вход любое число (a) типа - float (int) и возводит его в степень (n).
    """
    # Обработка условий.
    #assert a==0,'0 в любой степени равен - 0'
    #assert n<=0, 'Введена отрицательная степень для числа.'
    assert (type(a)==float or type(a)==int)  and type(n)==int, 'Веденное число не того типа (float или int ) .'
    
    if n==0: 
        return 1 # Любое число в нулевой степени равно единице.
    else:
        return pow(a, n-1)*a


def pow_1(a:float, n:int): 
    """
    Данная функция принимает на вход любое число (a) и возводит его в степень (n).
    Подходит для больших степеней.
    pow(a,n) -   1, при n=0       # Любое число в нулевой степени равно единице.
    (варианты)   pow(a,n-1)*a, если число n - число степени нечетное
                 pow(a**2,n//2), если число n - число степени четное 
    """
     # Обработка условий.
    #assert a==0,'0 в любой степени равен - 0'
    #assert n<=0, 'Введена отрицательная степень для числа.'
    assert (type(a)==float or type(a)==int)  and type(n)==int, 'Веденное число не того типа (float или int ) .'

    if n==0: 
        return 1 # Любое число в нулевой степени равно единице.
    elif n%2==1: # для нечетных степеней числа
        return pow(a, n-1)*a
    else:  # для четных сстепеней числа
        return pow(a**2, n//2)

n,m=map(int,input("Введите число (int или float) не равное 0, а через пробел - в какую положительную степень его возвести - ").split())
print('Первая функция ',pow(n,m))
print('Вторая функция ',pow_1(n,m))