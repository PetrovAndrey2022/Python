# Функция map:
# Функция map() мэп - применяет указанную функцию к каждому элементу итерируемого объекта
# и возвращает итератор с новым объектом.
# f(x) - x+10
# map(f,[1,2,3,4.5]) # [11,12,13,14,15]

# По объектам нельзя прозодить дважды.


#_________________________________________________________
# Создадим список от 1 до 19 включительно
# li=[x for x in range(1,20)] # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
# print(li)

# li=map(lambda x: x+10, li)
# print(li) # <map object at 0x000001F6AE1A6BC0>
# # выдала набор данных, надо обернуть в скобки и сделать явное преобразование

# li=list(map(lambda x: x+10, li))
# print(li) # [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]
#_________________________________________________________

# Обработка строки
# data=input().split() # Делис строку по умолчанию по пробелам
#data=input().split(',') # Делис строку по пробелам

# data=map(int,input('Введите данные через пробел ').split()) # Делит строку по умолчанию по пробелам
# print(data) # <map object at 0x00000191CCE76440>
# 1 2 3 4 5
# Выполним явное приведение в типу лист (type list)
# data=list(map(int,input('Введите данные через пробел ').split())) # Делит строку по умолчанию по пробелам
# print(data) # [1, 2, 3, 4, 5]


# можно явно и приводить к списку list(map(int,input('Введите данные через пробел ').split()))
# # а воспользоваться оператором for
# data=map(int,input('Введите данные через пробел ').split())
# print(data) # <map object at 0x00000241C85C6440>
# for e in data:
#     print(e)
# получим:
# 1
# 2
# 3
# 4
# 5

# По итератору можно проходить только один раз.
# data=map(int,'1,2,3'.split(','))
# print(data) # <map object at 0x00000241C85C6440>
# for e in data:
#     print(e)
# # Получим 
# 1
# 2
# 3

# ПОПРОБУЕМ 2 РАЗА ИСПОЛЬЗОАВТЬ, ПОТОКИ РАЗДЕЛИМ ___ для наглядности.
# data=map(int,'1,2,3'.split(','))
# print(data) # <map object at 0x00000241C85C6440>
# print('Первый проход for')
# for e in data:
#     print(e)
# print(' разделитель после первого прохода')
# print(' ________________________________')
# print(' начало второго прохода цикла for')
# for e in data:
#     print(e)
# print(' конец второго прохода цикла for')
# # Вывод 
# Первый проход for
# 1
# 2
# 3
#  разделитель после первого прохода
#  ________________________________
#  начало второго прохода цикла for
#  конец второго прохода цикла for
#  КАК ВИДИМ ВТОРОЙ РАЗ ПРОЙТИ ПО Итератору НЕЛЬЗЯ В ФУНКЦИИ MAP? для обхода 
#  этого необходимо данные предварительно гдето сохранить через явнок приведение к примеру
 
 
# data=list(map(int,'1,2,3'.split(',')))
# print(data) # [1, 2, 3]
# print('Первый проход for')
# for e in data:
#     print(e)
# print(' разделитель после первого прохода')
# print(' ________________________________')
# print(' начало второго прохода цикла for')
# for e in data:
#     print(e)
# print(' конец второго прохода цикла for')
# # Вывод, все ок
# [1, 2, 3]
# Первый проход for
# 1
# 2
# 3
#  разделитель после первого прохода
#  ________________________________
#  начало второго прохода цикла for
# 1
# 2
# 3
#  конец второго прохода цикла for


#_________________________________________________________
# Преобразуем пример из example_1 c использованием map
# def select(f,col): # Функция на вход принимает функцию и коллекцию
#     return [f(x) for x in col]
# def where(f,col):
#     return [x for x in col if f(x)]
# data='1 2 3 5 8 15 23 38'.split()
# res=select(int,data)
# print(res) # [1, 2, 3, 5, 8, 15, 23, 38]
# res=where(lambda x: not x%2, res)
# print(res) # [2, 8, 38]
# res=select(lambda x: (x, x**2),res)
# print(res) # [(2, 4), (8, 64), (38, 1444)]

# В следующий вид

def where(f,col):
    return [x for x in col if f(x)]
data='1 2 3 5 8 15 23 38'.split()
print(data) # [1, 2, 3, 5, 8, 15, 23, 38]
res=map(int,data)
print(res) # <map object at 0x000002320CB479A0> объект мэп
res=where(lambda x: not x%2, res)
print(res) # [2, 8, 38]
res=list(map(lambda x: (x, x**2),res))
print(res) # [(2, 4), (8, 64), (38, 1444)]